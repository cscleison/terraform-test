name: Pull Request Workflow
on:
  pull_request:

jobs:
  validate:
    name: Validate Release Label
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Read images json
        id: images
        shell: pwsh
        run: |
          $json = Get-Content images.json | ConvertFrom-Json
          echo $json adfsdf
        # echo $json.[ui] 2323sadf
        # echo "::set-output name=ui::$json.[ui]"

        # JSON=$(`echo cat ./images.json`)
        # UI=`echo $(jq -r '.ui' <<< "$JSON")`
        # echo "::set-output name=ui::$UI"

      # - name: Terraform fmt
      #   id: fmt
      #   run: terraform -chdir=apps fmt -check
      #   continue-on-error: false

      # - name: Terraform Init
      #   id: init
      #   run: terraform -chdir=apps init

      # - name: Terraform Validate
      #   id: validate
      #   run: terraform -chdir=apps validate -no-color -var="ecr_image='${{ steps.images.outputs.ui}}'"

      # - name: Terraform Plan
      #   id: plan
      #   run: terraform -chdir=apps plan -no-color -var="ecr_image='${{ steps.images.outputs.ui}}'"
      #   continue-on-error: false

# check the images exist
# add a new tag to the image on approval
# plan should post a comment with the plan
# command "deploy and squash"
